to build:

docker build -t --no-cache "nigelpickard/my-first-app" .
docker build --no-cache=true -t "nigelpickard/my-first-app" .    //build with no use of cache


forward to a port:

docker run -d -p 0.0.0.0:9000:9000 nigelpickard/my-first-app

stop all containers:

docker stop $(docker ps -a -q)


commit
docker commit 4695 nigelpickard/my-first-app:firstsuccessfultest


Concepts
========
An image is an immutable snapshot of a container.  
A container is an instance of a running image.

To see images, run:

docker images


We will get:
REPOSITORY                  TAG                   IMAGE ID            CREATED             VIRTUAL SIZE
ubuntu		            latest                asdafd34raff        6 seconds ago       1.881 GB
ubuntu		            12.04                 7af9886ddff1        6 seconds ago       1.881 GB
ubuntu		            10.12                 8aasdfdsd23a        6 seconds ago       1.881 GB
ubuntu		             9.05                 223sadfseedd        6 seconds ago       1.881 GB
nigelpickard/my-first-app   latest                0abcba59e41a        10 hours ago        1.881 GB
nigelpickard/my-first-app   firstsuccessfultest   f75c3e556171        11 hours ago        1.881 GB


Where:
Repository is which repository we use; we can think of it like a handy categorization e.g. we have the ubuntu
repository where we obtain ubuntu images -of which each ubuntu image may be differentiated by its tag, e.g
the version number.  The Image id uniquely identifies an image.

To run a specific image:

sudo docker run -t -i ubuntu:12.04 /bin/bash

Here we are running from the repository the tag 12.04.  If you don't specify a variant, for example you just use ubuntu, 
then Docker will default to using the ubuntu:latest image.
 
e.g. sudo docker run -t -i ubuntu /bin/bash

will run the latest tag.








